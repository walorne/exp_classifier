"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á –∏–∑ JIRA –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Excel
"""
import pandas as pd
import os
import re
from datetime import datetime
from tqdm import tqdm
from clients.jira_client import get_jira_client
from utils.file_utils import safe_save_excel


def clean_text(text):
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    if not text:
        return ''
    
    # –£–¥–∞–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    text = text.replace('\n', ' ').replace('\r', ' ')
    text = ' '.join(text.split())  # –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
    
    # –£–¥–∞–ª—è–µ–º JIRA —Ä–∞–∑–º–µ—Ç–∫—É (–±–æ–ª–µ–µ —Ç–æ—á–Ω–æ)
    text = re.sub(r'\{code[^}]*\}.*?\{code\}', '', text, flags=re.DOTALL)  # {code}...{code}
    text = re.sub(r'\{quote[^}]*\}.*?\{quote\}', '', text, flags=re.DOTALL)  # {quote}...{quote}
    text = re.sub(r'\{noformat[^}]*\}.*?\{noformat\}', '', text, flags=re.DOTALL)  # {noformat}
    text = re.sub(r'\[~[^\]]+\]', '', text)  # [~username] - —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    text = re.sub(r'\[[^\]]*\|[^\]]*\]', '', text)  # [text|link] - —Å—Å—ã–ª–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–º
    text = re.sub(r'h[1-6]\.\s+', '', text)  # h1. h2. –∑–∞–≥–æ–ª–æ–≤–∫–∏
    
    # –£–±–∏—Ä–∞–µ–º JIRA —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    text = re.sub(r'\*([^*]+)\*', r'\1', text)  # *–∂–∏—Ä–Ω—ã–π* ‚Üí –∂–∏—Ä–Ω—ã–π
    text = re.sub(r'_([^_]+)_', r'\1', text)  # _–∫—É—Ä—Å–∏–≤_ ‚Üí –∫—É—Ä—Å–∏–≤
    
    # –£–±–∏—Ä–∞–µ–º URL
    text = re.sub(r'https?://[^\s]+', '', text)
    
    # –£–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã, —Å–æ—Ö—Ä–∞–Ω—è—è –≤–∞–∂–Ω—É—é –ø—É–Ω–∫—Ç—É–∞—Ü–∏—é
    # –û—Å—Ç–∞–≤–ª—è–µ–º: –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –æ—Å–Ω–æ–≤–Ω—É—é –ø—É–Ω–∫—Ç—É–∞—Ü–∏—é, —Å–∫–æ–±–∫–∏, –∫–∞–≤—ã—á–∫–∏
    text = re.sub(r'[^\w\s\-.,!?():;"\'@#‚Ññ%/\\]', ' ', text, flags=re.UNICODE)
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–µ–ª–æ–≤
    text = ' '.join(text.split())
    
    return text


def clean_description(desc):
    """–û—á–∏—Å—Ç–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    return clean_text(desc)


def collect_and_clean_comments(issue):
    """
    –°–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∑–∞–¥–∞—á–µ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –∏—Ö –≤ –æ–¥–∏–Ω –æ—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    
    Args:
        issue: –æ–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏ JIRA
    
    Returns:
        str: –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∏ –æ—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    """
    if not hasattr(issue.fields, 'comment') or not issue.fields.comment:
        return ''
    
    comments_text = []
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        comments = issue.fields.comment.comments
        
        for comment in comments:
            if hasattr(comment, 'body') and comment.body:
                # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
                clean_comment = clean_text(comment.body)
                if clean_comment.strip():  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                    comments_text.append(clean_comment)
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        if comments_text:
            return ' | '.join(comments_text)
        else:
            return ''
            
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è {issue.key}: {e}")
        return ''


def fetch_and_save_tasks(jql_query, data_folder="classification_data", chunk_size=100, max_results=None, save_timestamped=True):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–¥–∞—á–∏ –∏–∑ JIRA –ø–æ JQL –∑–∞–ø—Ä–æ—Å—É —á–∞—Å—Ç—è–º–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ Excel
    
    –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò:
    - –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Ä—Ü–∏—è–º–∏ (chunk_size) –≤–º–µ—Å—Ç–æ –≤—Å–µ—Ö –∑–∞–¥–∞—á —Å—Ä–∞–∑—É
    - –ó–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã—Ö –ø–æ–ª–µ–π: key, summary, description, issuetype, timespent
    - –ë—ã—Å—Ç—Ä—ã–π –ø–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    
    Args:
        jql_query (str): JQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á
        data_folder (str): –ø–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        chunk_size (int): —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 25-100)
        max_results (int): –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á (None = –≤—Å–µ)
        save_timestamped (bool): —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–∏ —Ñ–∞–π–ª—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏
    
    Returns:
        pd.DataFrame: DataFrame —Å –∑–∞–¥–∞—á–∞–º–∏
        str: –ø—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ñ–∞–π–ª—É –∑–∞–¥–∞—á
    """
    print(f"üîç –í—ã–ø–æ–ª–Ω—è—é JQL –∑–∞–ø—Ä–æ—Å —á–∞—Å—Ç—è–º–∏ –ø–æ {chunk_size} –∑–∞–¥–∞—á...")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ JIRA
    jira = get_jira_client()
    
    # –°–Ω–∞—á–∞–ª–∞ —É–∑–Ω–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á (–±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ –ø–æ–ª–µ–π)
    try:
        print("üîç –í—ã–ø–æ–ª–Ω—è—é –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç –∑–∞–¥–∞—á...")
        total_count = jira.search_issues(jql_query, maxResults=0, fields='key').total
        print(f"üìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á: {total_count}")
        
        if max_results and max_results < total_count:
            total_count = max_results
            print(f"üéØ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ: {max_results} –∑–∞–¥–∞—á")
            
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –∑–∞–¥–∞—á: {e}")
        if "401" in str(e) or "Unauthorized" in str(e):
            print("üîê –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π JIRA:")
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ JIRA_TOKEN –≤ —Ñ–∞–π–ª–µ .env")
            print("   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–æ–µ–∫—Ç—É –∏ —ç–ø–∏–∫—É")
        elif "issueFunction" in str(e).lower():
            print("üîå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π issuesInEpics:")
            print("   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ ScriptRunner –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–ª–∞–≥–∏–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å JQL –∑–∞–ø—Ä–æ—Å–∞")
        elif "timeout" in str(e).lower():
            print("‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞:")
            print("   - JQL –∑–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–π, —É–≤–µ–ª–∏—á–µ–Ω —Ç–∞–π–º–∞—É—Ç –¥–æ 60 —Å–µ–∫")
        print("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ—Ä—Ü–∏—è–º–∏...")
        total_count = None
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    if total_count:
        total_to_fetch = min(total_count, max_results) if max_results else total_count
        print(f"üì• –ó–∞–≥—Ä—É–∂–∞—é {total_to_fetch} –∑–∞–¥–∞—á –ø–æ—Ä—Ü–∏—è–º–∏ –ø–æ {chunk_size}")
    else:
        total_to_fetch = max_results if max_results else None
        if total_to_fetch:
            print(f"üì• –ó–∞–≥—Ä—É–∂–∞—é –¥–æ {total_to_fetch} –∑–∞–¥–∞—á –ø–æ—Ä—Ü–∏—è–º–∏ –ø–æ {chunk_size}")
        else:
            print(f"üì• –ó–∞–≥—Ä—É–∂–∞—é –∑–∞–¥–∞—á–∏ –ø–æ—Ä—Ü–∏—è–º–∏ –ø–æ {chunk_size}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –ø–æ—Ä—Ü–∏—è–º–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
    all_data = []
    start_at = 0
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    if total_to_fetch:
        pbar = tqdm(total=total_to_fetch, 
                   desc="üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞—á", 
                   unit="–∑–∞–¥–∞—á–∞",
                   ncols=100,
                   leave=False,
                   dynamic_ncols=False,
                   miniters=1,
                   mininterval=0.1,  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
                   maxinterval=1.0,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
                   smoothing=0.1,    # –°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
                   bar_format='{desc}: {percentage:3.0f}%|{bar}| {n_fmt}/{total_fmt} [{elapsed}<{remaining}]')
    else:
        pbar = None
    
    try:
        while True:
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ –µ—Å–ª–∏ –ø—Ä–∏–±–ª–∏–∂–∞–µ–º—Å—è –∫ –ª–∏–º–∏—Ç—É
            current_chunk_size = chunk_size
            if max_results and start_at + chunk_size > max_results:
                current_chunk_size = max_results - start_at
                
            if current_chunk_size <= 0:
                break
                
            try:
                # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Ä—Ü–∏—é —Ç–æ–ª—å–∫–æ —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ (–¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏)
                issues = jira.search_issues(
                    jql_query, 
                    startAt=start_at, 
                    maxResults=current_chunk_size,
                    fields='key,summary,description,issuetype,timespent,comment'  # üî• –¢–û–õ–¨–ö–û –ù–£–ñ–ù–´–ï –ü–û–õ–Ø + –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò
                )
                
                if not issues:
                    break
                    
                # –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–æ—Ä—Ü–∏–∏
                tasks_with_comments = 0
                total_comments = 0
            
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á–∏ –∏–∑ —Ç–µ–∫—É—â–µ–π –ø–æ—Ä—Ü–∏–∏
                for issue in issues:
                    comments_text = collect_and_clean_comments(issue)
                    
                    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º
                    if comments_text:
                        tasks_with_comments += 1
                        # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é
                        total_comments += len(comments_text.split(' | '))
                    
                    all_data.append({
                        'key': issue.key,
                        'title': issue.fields.summary,
                        'description': clean_description(issue.fields.description),
                        'comments': comments_text,  # üÜï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                        'issuetype': issue.fields.issuetype.name,
                        'time_spent': getattr(issue.fields, 'timespent', 0) or 0,
                        'processing_stage': 'new',  # –≠—Ç–∞–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏
                        'category_id': '',          # ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø–æ–∫–∞ –ø—É—Å—Ç–æ–π)
                        'batch_processed': 0        # –ù–æ–º–µ—Ä –±–∞—Ç—á–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                    })
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
                if pbar:
                    pbar.update(len(issues))
                
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ—Ä—Ü–∏–∏
                start_at += len(issues)
                
                # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ –∑–∞–¥–∞—á —á–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ - —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ—Ä—Ü–∏—è
                if len(issues) < current_chunk_size:
                    break
                    
                # –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞
                if max_results and start_at >= max_results:
                    break
                    
            except Exception as e:
                if pbar:
                    pbar.close()
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
                if "401" in str(e):
                    print("üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω!")
                    raise
                break
    
    finally:
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        if pbar:
            pbar.refresh()  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            pbar.close()

    if not all_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏!")
        raise Exception("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")

    df = pd.DataFrame(all_data)
    
    # –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º
    tasks_with_comments = df['comments'].apply(lambda x: len(x.strip()) > 0).sum()
    if tasks_with_comments > 0:
        print(f"\n‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} –∑–∞–¥–∞—á, —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏: {tasks_with_comments}")
    else:
        print(f"\n‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} –∑–∞–¥–∞—á")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á–∏ –≤ Excel —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
    success1 = True
    tasks_file = None
    
    if save_timestamped:
        timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
        tasks_file = os.path.join(data_folder, f"tasks_{timestamp}.xlsx")
        success1 = safe_save_excel(df, tasks_file, 'Tasks', show_success_message=False)
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∑–∞–¥–∞—á
    main_tasks_file = os.path.join(data_folder, "tasks.xlsx")
    success2 = safe_save_excel(df, main_tasks_file, 'Tasks', show_success_message=False)
    
    if save_timestamped and success1 and success2:
        return df, tasks_file
    elif success2:
        return df, main_tasks_file
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–¥–∞—á–∏")
        return df, None
