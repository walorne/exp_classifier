"""
–ú–æ–¥—É–ª—å –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á –ø–æ –æ–¥–Ω–æ–π —Å –ø–æ–º–æ—â—å—é LLM
–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–¥–∞—á–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—É—Ç–∏ –≤—ã–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ä–∞–±–æ—Ç
"""
import pandas as pd
import os
from datetime import datetime
from tqdm import tqdm
from clients.ai_client import create_default_client
from utils.file_utils import safe_save_excel


def summarize_single_task(task_row, llm_client):
    """
    –°—É–º–º–∞—Ä–∏–∑–∏—Ä—É–µ—Ç –æ–¥–Ω—É –∑–∞–¥–∞—á—É, –∏–∑–≤–ª–µ–∫–∞—è —Å—É—Ç—å –≤—ã–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ä–∞–±–æ—Ç
    
    Args:
        task_row: —Å—Ç—Ä–æ–∫–∞ DataFrame —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–¥–∞—á–∏
        llm_client: –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å LLM
    
    Returns:
        str: —Å—É–º–º–∞—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
    """
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏
    task_text = f"""–¢–∏–ø: {task_row.get('issuetype', '–ù–µ —É–∫–∞–∑–∞–Ω')}
–ù–∞–∑–≤–∞–Ω–∏–µ: {task_row.get('title', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
–û–ø–∏—Å–∞–Ω–∏–µ: {task_row.get('description', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {task_row.get('comments', '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤')}"""

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏
    prompt = f"""–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É —Ä–∞–±–æ—á–∏—Ö –∑–∞–¥–∞—á. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â—É—é JIRA –∑–∞–¥–∞—á—É –∏ —Å–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫—É—é —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—é.

–ó–ê–î–ê–ß–ê –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê:
{task_text}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–£–ú–ú–ê–†–ò–ó–ê–¶–ò–ò:
1. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ –°–£–¢–¨ - –∫–∞–∫–∏–µ —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ –∑–∞–¥–∞—á–µ
2. –£–∫–∞–∂–∏ –ì–î–ï –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ä–∞–±–æ—Ç—ã (—Å–∏—Å—Ç–µ–º–∞, –º–æ–¥—É–ª—å, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç)
3. –£–±–µ—Ä–∏ –ª–∏—à–Ω–∏–µ –¥–µ—Ç–∞–ª–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏ –æ–±—â–∏–µ —Ñ—Ä–∞–∑—ã
4. –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –î–ï–ô–°–¢–í–ò–Ø–• –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å
5. –ú–∞–∫—Å–∏–º—É–º 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
6. –ò—Å–ø–æ–ª—å–∑—É–π –¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å –±–µ–∑ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–∫—Ä–∞—Å–∫–∏
7. –í–ê–ñ–ù–û: –æ–ø–∏—Å—ã–≤–∞–π —Ä–∞–±–æ—Ç—ã –≤ —Å—Ç–∏–ª–µ "—á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å", –∞ –ù–ï "—á—Ç–æ —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ"

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç –∏ –º–µ—Å—Ç–æ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –∏–Ω—Ñ–∏–Ω–∏—Ç–∏–≤–Ω–æ–π —Ñ–æ—Ä–º–µ

–ü–†–ò–ú–ï–† –ü–†–ê–í–ò–õ–¨–ù–û–ô –°–£–ú–ú–ê–†–ò–ó–ê–¶–ò–ò:
"–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≤–Ω–µ—à–Ω–∏–º API –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –≤ –º–æ–¥—É–ª–µ billing. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ timeout –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–∞—Ö –∫ —Å–µ—Ä–≤–∏—Å—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏."

–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û (–ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è):
"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º API –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ timeout."

–ü–†–ê–í–ò–õ–¨–ù–û (–∏–Ω—Ñ–∏–Ω–∏—Ç–∏–≤):
"–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≤–Ω–µ—à–Ω–∏–º API –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ timeout."

–ù–ï –í–ö–õ–Æ–ß–ê–ô:
- –û–±—â–∏–µ —Ñ—Ä–∞–∑—ã —Ç–∏–ø–∞ "–≤ —Ä–∞–º–∫–∞—Ö –∑–∞–¥–∞—á–∏", "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å"
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
- –ü–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ
- –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∏ —ç–º–æ—Ü–∏–∏

–í–ï–†–ù–ò –¢–û–õ–¨–ö–û –°–£–ú–ú–ê–†–ò–ó–ê–¶–ò–Æ –ë–ï–ó –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ì–û –¢–ï–ö–°–¢–ê."""

    try:
        response = llm_client.simple_chat(prompt)
        return response.strip()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á–∏ {task_row.get('key', 'Unknown')}: {e}")
        return f"–û—à–∏–±–∫–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏: {str(e)}"


def process_tasks_individually(tasks_df, project_folder, save_timestamped=True):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–¥–∞—á–∏ –ø–æ –æ–¥–Ω–æ–π –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏
    
    Args:
        tasks_df (pd.DataFrame): DataFrame —Å –∑–∞–¥–∞—á–∞–º–∏
        project_folder (str): –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        save_timestamped (bool): —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–∏ —Ñ–∞–π–ª—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏
    
    Returns:
        pd.DataFrame: DataFrame —Å —Å—É–º–º–∞—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏
        str: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    """
    print(f"\nü§ñ –°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è {len(tasks_df)} –∑–∞–¥–∞—á –ø–æ –æ–¥–Ω–æ–π...")
    print(f"üìÇ –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞: {project_folder}")
    
    # –°–æ–∑–¥–∞–µ–º LLM –∫–ª–∏–µ–Ω—Ç
    llm_client = create_default_client()
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
    os.makedirs(project_folder, exist_ok=True)
    
    # –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π DataFrame –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏
    result_df = tasks_df.copy()
    result_df['summary'] = ""
    
    # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    success_count = 0
    error_count = 0
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∑–∞–¥–∞—á—É —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
    with tqdm(total=len(tasks_df), 
              desc="ü§ñ –°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á", 
              unit="–∑–∞–¥–∞—á–∞",
              bar_format='{l_bar}{bar}| {n_fmt}/{total_fmt} [{elapsed}<{remaining}, {rate_fmt}]') as pbar:
        
        for index, row in tasks_df.iterrows():
            task_key = row.get('key', f'Task_{index}')
            pbar.set_description(f"ü§ñ {task_key}")
            
            try:
                summary = summarize_single_task(row, llm_client)
                result_df.loc[index, 'summary'] = summary
                success_count += 1
                pbar.set_postfix({
                    '–£—Å–ø–µ—à–Ω–æ': success_count,
                    '–û—à–∏–±–æ–∫': error_count,
                    '–°—Ç–∞—Ç—É—Å': '‚úÖ'
                })
                
            except Exception as e:
                error_msg = f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {str(e)}"
                result_df.loc[index, 'summary'] = error_msg
                error_count += 1
                pbar.set_postfix({
                    '–£—Å–ø–µ—à–Ω–æ': success_count,
                    '–û—à–∏–±–æ–∫': error_count,
                    '–°—Ç–∞—Ç—É—Å': '‚ùå'
                })
                
            pbar.update(1)
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏:")
    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {success_count}")
    print(f"   ‚ùå –û—à–∏–±–æ–∫: {error_count}")
    print(f"   üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(success_count/len(tasks_df)*100):.1f}%")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüìã –°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–æ—Ö—Ä–∞–Ω—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...")
    
    success1 = True
    summary_file = None
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
    if save_timestamped:
        timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
        summary_file = os.path.join(project_folder, f"tasks_summary_{timestamp}.xlsx")
        success1 = safe_save_excel(result_df, summary_file, 'Summarized_Tasks')
    
    # –í—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
    main_summary_file = os.path.join(project_folder, "tasks_summary.xlsx")
    success2 = safe_save_excel(result_df, main_summary_file, 'Summarized_Tasks')
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    if save_timestamped:
        if success1 and success2:
            print(f"\n‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:")
            print(f"   üìÑ –§–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏: {summary_file}")
            print(f"   üìÑ –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª: {main_summary_file}")
        elif success1 or success2:
            print(f"\n‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:")
            if success1:
                print(f"   ‚úÖ –§–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏: {summary_file}")
            if success2:
                print(f"   ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª: {main_summary_file}")
        else:
            print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª—ã!")
    else:
        if success2:
            print(f"\n‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {main_summary_file}")
        else:
            print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª: {main_summary_file}")
    
    return result_df, summary_file if (save_timestamped and success1) else main_summary_file if success2 else None


def summarize_tasks(tasks_df, project_folder, save_timestamped=True):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á
    
    Args:
        tasks_df (pd.DataFrame): DataFrame —Å –∑–∞–¥–∞—á–∞–º–∏
        project_folder (str): –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        save_timestamped (bool): —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–∏ —Ñ–∞–π–ª—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏
    
    Returns:
        pd.DataFrame: DataFrame —Å —Å—É–º–º–∞—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏
        str: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    """
    return process_tasks_individually(tasks_df, project_folder, save_timestamped)


if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    print("üìù –ú–æ–¥—É–ª—å —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á")
    print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é summarize_tasks() –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞—á")
