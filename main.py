"""
–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ JIRA –∑–∞–¥–∞—á
"""
from jira_tasks_fetcher import fetch_and_save_tasks
from category_generator import generate_categories_from_tasks
from category_consolidator import create_final_categories
from task_classifier import classify_all_tasks, load_tasks_and_categories

# ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–ö–†–ò–ü–¢–ê =====
JQL = "project = MPSM AND issueFunction in issuesInEpics(\"ERP_JOBs ~ '00-00377754#000000002'\") AND created >= 2024-09-01 ORDER BY created DESC"
CATEGORY_FINAL_COUNT = 10
BATCH_SIZE = 50
DATA_FOLDER = "classification_data"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ JIRA
JIRA_CHUNK_SIZE = 50      # –†–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ JIRA
MAX_TASKS_LIMIT = None     # –õ–∏–º–∏—Ç –∑–∞–¥–∞—á –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (None = –≤—Å–µ)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
CLASSIFICATION_BATCH_SIZE = 15  # –†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ LLM (–º–µ–Ω—å—à–µ = —Ç–æ—á–Ω–µ–µ)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ JIRA –∑–∞–¥–∞—á")
    print("=" * 50)
    
    # –≠—Ç–∞–ø 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –∏–∑ JIRA
    print("\nüìã –≠–¢–ê–ü 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –∏–∑ JIRA")
    tasks_df, tasks_file = fetch_and_save_tasks(
        jql_query=JQL,
        data_folder=DATA_FOLDER,
        chunk_size=JIRA_CHUNK_SIZE,
        max_results=MAX_TASKS_LIMIT
    )
    
    # –≠—Ç–∞–ø 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    print("\nü§ñ –≠–¢–ê–ü 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    categories_df, categories_file = generate_categories_from_tasks(
        tasks_df=tasks_df,
        batch_size=BATCH_SIZE,
        data_folder=DATA_FOLDER
    )
    
    # –≠—Ç–∞–ø 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    print("\nüéØ –≠–¢–ê–ü 3: –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    final_categories_df, final_file = create_final_categories(
        categories_df=categories_df,
        target_count=CATEGORY_FINAL_COUNT,
        data_folder=DATA_FOLDER
    )
    
    # –≠—Ç–∞–ø 4: –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–¥–∞—á –ø–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    print("\nüè∑Ô∏è –≠–¢–ê–ü 4: –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–¥–∞—á–∞–º")
    classified_df, classified_file = classify_all_tasks(
        tasks_df=tasks_df,
        categories_df=final_categories_df,
        batch_size=CLASSIFICATION_BATCH_SIZE,
        data_folder=DATA_FOLDER
    )
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
    print("\n" + "=" * 50)
    print("‚úÖ –ü–†–û–¶–ï–°–° –ó–ê–í–ï–†–®–ï–ù")
    print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–¥–∞—á: {len(tasks_df)}")
    print(f"üè∑Ô∏è –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories_df)}")
    print(f"üéØ –§–∏–Ω–∞–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(final_categories_df)}")
    print(f"üìã –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–¥–∞—á: {(classified_df['assigned_category'] != '').sum()}")
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    print(f"   üìÑ –ó–∞–¥–∞—á–∏: {tasks_file}")
    print(f"   üìÑ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories_file}")
    print(f"   üìÑ –§–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {final_file}")
    print(f"   üìÑ –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏: {classified_file}")


if __name__ == "__main__":
    main()